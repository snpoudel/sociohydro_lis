f_alphap
#alpha_p
f_alphap <- f_melt %>% ggplot(aes(x = alpha_p, y = value))+
geom_smooth()+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "alpha_p", y = "RPL Values")
f_alphap
#alpha_p
f_alphap <- f_melt %>% ggplot(aes(x = alpha_p, y = value))+
geom_smooth()+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
legend(panel.spacing = unit(1, "lines"))+
labs( x = "alpha_p", y = "RPL Values")
#alpha_p
f_alphap <- f_melt %>% ggplot(aes(x = alpha_p, y = value))+
geom_smooth()+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "alpha_p", y = "RPL Values")
f_alphap
#alpha_d
f_alphad <- f_melt %>% ggplot(aes(x = alpha_d, y = value))+
geom_smooth()+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "alpha_d", y = "RPL Values")
f_alphad
#mew_p
f_mewp <- f_melt %>% ggplot(aes(x = mew_p, y = value))+
geom_smooth()+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_p", y = "RPL Values")
f_mewp
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth()+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")
f_mewa
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(orientation = "y")+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")
f_mewa
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(method = lm)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")
f_mewa
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(method = lm, se = F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")
f_mewa
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(method = lm, se = T)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")
f_mewa
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(method = lm, se = F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")
f_mewa
library(tidyverse)
library(reshape2)
#set working directory
setwd("C:/SANDEEP/SocioHydro_Model/Data/SVI_2020")
#load SH parameters and SVI
f1 = read.csv("SH_Parameters.csv")
f2 = read.csv("SVI2020_US.csv")
#Filter sh parameters based on FIPS of svi and arrange the output in the ascending order of census tract
f1 <- f1 %>% filter(census_tract %in% f2$FIPS) %>%
arrange(census_tract)
#Filter svi based on census tracts of sh parameters and arrange the output in the ascending order of FIPS
f2 <- f2 %>% filter(FIPS %in% f1$census_tract) %>%
select(-ST) %>%
arrange(FIPS)
#Combine dataframes and remove census tract column as census tract and FIPS are same
f <- cbind(f2,f1)
f <- f %>% select(-census_tract)
#write.table(f,"C:/SANDEEP/SocioHydro_Model/Results/SVI_SHpara/SVI_SHparameters.csv", sep = " ")
#correlation plots
theme_set(theme_bw())
f_melt <- melt(f, measure.vars = c("RPL_THEME1", "RPL_THEME2", "RPL_THEME3", "RPL_THEME4", "RPL_THEMES"))
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
theme(panel.spacing = unit(1,"lines"))+
labs(x = "Surge Threshold (meter)", y = "RPL Values")
f_surge
#Rain_threshold
f_rain <- f_melt %>% ggplot(aes(x = Rain_threshold, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~. , scale = "free_y")+
theme(panel.spacing = unit(1,"lines"))+
labs(x = "Rain Threshold", y = "RPL Values")
f_rain
#alpha_r
f_alphar <- f_melt %>% ggplot(aes(x = alpha_r, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scales = "free_y")+
theme(panel.spacing = unit(1,"lines"))+
labs( x = "alpha_r", y = "RPL Values")
f_alphar
#alpha_a
f_alphaa <- f_melt %>% ggplot(aes(x = alpha_a, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
legend(panel.spacing = unit(1, "lines"))+
labs( x = "alpha_a", y = "RPL Values")
library(tidyverse)
library(reshape2)
#set working directory
setwd("C:/SANDEEP/SocioHydro_Model/Data/SVI_2020")
#load SH parameters and SVI
f1 = read.csv("SH_Parameters.csv")
f2 = read.csv("SVI2020_US.csv")
#Filter sh parameters based on FIPS of svi and arrange the output in the ascending order of census tract
f1 <- f1 %>% filter(census_tract %in% f2$FIPS) %>%
arrange(census_tract)
#Filter svi based on census tracts of sh parameters and arrange the output in the ascending order of FIPS
f2 <- f2 %>% filter(FIPS %in% f1$census_tract) %>%
select(-ST) %>%
arrange(FIPS)
#Combine dataframes and remove census tract column as census tract and FIPS are same
f <- cbind(f2,f1)
f <- f %>% select(-census_tract)
#write.table(f,"C:/SANDEEP/SocioHydro_Model/Results/SVI_SHpara/SVI_SHparameters.csv", sep = " ")
#correlation plots
theme_set(theme_bw())
f_melt <- melt(f, measure.vars = c("RPL_THEME1", "RPL_THEME2", "RPL_THEME3", "RPL_THEME4", "RPL_THEMES"))
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")
f_surge
#Rain_threshold
f_rain <- f_melt %>% ggplot(aes(x = Rain_threshold, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~. , scale = "free_y")+
labs(x = "Rain Threshold", y = "RPL Values")
f_rain
#alpha_r
f_alphar <- f_melt %>% ggplot(aes(x = alpha_r, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scales = "free_y")+
labs( x = "alpha_r", y = "RPL Values")
f_alphar
#alpha_a
f_alphaa <- f_melt %>% ggplot(aes(x = alpha_a, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "alpha_a", y = "RPL Values")
f_alphaa
#alpha_p
f_alphap <- f_melt %>% ggplot(aes(x = alpha_p, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "alpha_p", y = "RPL Values")
f_alphap
#alpha_d
f_alphad <- f_melt %>% ggplot(aes(x = alpha_d, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "alpha_d", y = "RPL Values")
f_alphad
#mew_p
f_mewp <- f_melt %>% ggplot(aes(x = mew_p, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_p", y = "RPL Values")
f_mewp
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(method = lm, se = F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")
f_mewa
###Results
f_surge
f_rain
f_alphar
f_alphaa
f_alphap
f_alphad
f_mewa
f_mewp
###Results
f_surge
f_rain
f_alphar
f_alphaa
f_alphap
f_alphad
f_mewa
f_mewp
install.packages("ggpubr")
library(ggpubr)
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(method = "pearson")
f_surge
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(method = "pearson", r.label)
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(method = "pearson", label = r.label)
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(method = "pearson", aes(label = rr))
f_surge
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(method = "pearson", aes(label = r.label))
f_surge
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(aes(label = rr.label))
f_surge
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(method = "pearson",aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")) )
f_surge
stat_cor(method = "pearson",aes(label = paste(rr.label))
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
f_surge
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(method = "pearson",aes(label = paste(rr.label)))
f_surge
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(method = "pearson",aes(label = paste(rr.label, sep = "~")))
f_surge
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(method = "pearson",aes(rr.label))
f_surge
#Rain_threshold
f_rain <- f_melt %>% ggplot(aes(x = Rain_threshold, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~. , scale = "free_y")+
labs(x = "Rain Threshold", y = "RPL Values")+
aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~"))
f_rain
#Rain_threshold
f_rain <- f_melt %>% ggplot(aes(x = Rain_threshold, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~. , scale = "free_y")+
labs(x = "Rain Threshold", y = "RPL Values")+
aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~"))
f_rain
#Rain_threshold
f_rain <- f_melt %>% ggplot(aes(x = Rain_threshold, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~. , scale = "free_y")+
labs(x = "Rain Threshold", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")))
f_rain
#Rain_threshold
f_rain <- f_melt %>% ggplot(aes(x = Rain_threshold, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~. , scale = "free_y")+
labs(x = "Rain Threshold", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_rain
library(tidyverse)
library(reshape2)
library(ggpubr)
#set working directory
setwd("C:/SANDEEP/SocioHydro_Model/Data/SVI_2020")
#load SH parameters and SVI
f1 = read.csv("SH_Parameters.csv")
f2 = read.csv("SVI2020_US.csv")
#Filter sh parameters based on FIPS of svi and arrange the output in the ascending order of census tract
f1 <- f1 %>% filter(census_tract %in% f2$FIPS) %>%
arrange(census_tract)
#Filter svi based on census tracts of sh parameters and arrange the output in the ascending order of FIPS
f2 <- f2 %>% filter(FIPS %in% f1$census_tract) %>%
select(-ST) %>%
arrange(FIPS)
#Combine dataframes and remove census tract column as census tract and FIPS are same
f <- cbind(f2,f1)
f <- f %>% select(-census_tract)
#write.table(f,"C:/SANDEEP/SocioHydro_Model/Results/SVI_SHpara/SVI_SHparameters.csv", sep = " ")
#correlation plots
theme_set(theme_bw())
f_melt <- melt(f, measure.vars = c("RPL_THEME1", "RPL_THEME2", "RPL_THEME3", "RPL_THEME4", "RPL_THEMES"))
#Surge_threshold
f_surge <- f_melt %>% ggplot(aes(x = Surge_threshold, y = value)) +
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable ~ ., scales = "free_y")+
theme(legend.position = "none")+
labs(x = "Surge Threshold (meter)", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_surge
#Rain_threshold
f_rain <- f_melt %>% ggplot(aes(x = Rain_threshold, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~. , scale = "free_y")+
labs(x = "Rain Threshold", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_rain
#alpha_r
f_alphar <- f_melt %>% ggplot(aes(x = alpha_r, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scales = "free_y")+
labs( x = "alpha_r", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_alphar
#alpha_a
f_alphaa <- f_melt %>% ggplot(aes(x = alpha_a, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "alpha_a", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_alphaa
#alpha_p
f_alphap <- f_melt %>% ggplot(aes(x = alpha_p, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "alpha_p", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_alphap
#alpha_d
f_alphad <- f_melt %>% ggplot(aes(x = alpha_d, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "alpha_d", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_alphad
#mew_p
f_mewp <- f_melt %>% ggplot(aes(x = mew_p, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_p", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_mewp
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(method = lm, se = F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_mewa
###Results
f_surge
f_rain
f_alphar
f_alphaa
f_alphap
f_alphad
f_mewa
f_mewp
f_mewp
f_mewa
f_alphad
f_alphaa
f_alphar
###Results
f_surge
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(span = 0.3, method = lm, se = F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_mewa
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(span = 0.1, method = lm, se = F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_mewa
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(method = glm, se = F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_mewa
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(method = lm, se = F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")+
stat_cor(aes(label = paste(..rr.label.., sep = "~`,`~")))
f_mewa
#mew_p
f_mewp <- f_melt %>% ggplot(aes(x = mew_p, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_p", y = "RPL Values")+
stat_cor(aes(label = paste(..r.label.., sep = "~`,`~")))
f_mewp
#mew_a
f_mewa <- f_melt %>% ggplot(aes(x = mew_a, y = value))+
geom_smooth(method = lm, se = F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_a", y = "RPL Values")+
stat_cor(aes(label = paste(..r.label.., sep = "~`,`~")))
f_mewa
#mew_p
f_mewp <- f_melt %>% ggplot(aes(x = mew_p, y = value))+
geom_smooth(method = lm, se =F)+
geom_point(size = 0.5)+
facet_grid(variable~., scale = "free_y")+
labs( x = "mew_p", y = "RPL Values")+
stat_cor(aes(label = paste(..r.label.., sep = "~`,`~")))
f_mewp
